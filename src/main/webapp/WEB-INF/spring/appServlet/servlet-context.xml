<?xml version="1.0" encoding="UTF-8"?>
<!-- 태그 설정을 관리해 줌 -->
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- 어노테이션 기반의 컴포넌트 사용 -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- ** 자식들 자원 모두 허용, * 해당 자원만 허용 -->
	<!-- webapp/resources 안에 있는 자원들만 사용 가능 -->
	<resources mapping="/resources/**" location="/resources/" />
	
<!-- 	localhost:8092/resources/images/mi.jpg -->
<!-- 	localhost:8092/img/mi.jpg -->
	
	<!-- image, css, js -->
	<!-- 자원에 대한 url mapping -->
	<resources mapping="/img/**" location="/resources/images/" />

	<!-- bean: Spring이 생각하는 하나의 클래스 -->
	<!-- /WEB-INF/views/ ____view name___.jsp-->
	<!-- ^ webapp이 root -->
	<!-- 미리 실행 가능하도록 bean으로 등록 -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- view resolver 세팅 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- component를 찾겠다 -->
	<!-- component: Spring에서 사용되는 구성요소들 -->
	<!-- component에는 Controller, Service가 존재하는 패키지를 넣어준다 -->
	<!-- 컴포넌트 스캔하는 부모 패키지 선언 -->
	<context:component-scan base-package="web.controller" />
	
	
	
</beans:beans>
